Magesh Kuppan

Schedule:
    Commence    : 9:30 AM
    Tea Break   : 11:00 AM (20 mins)
    Lunch Break : 1:00 PM (1 hr)
    Tea Break   : 3:30 PM (20 mins)
    Wind up     : 5:30 PM

Methodology:
    No powerpoint
    ONLY code

Repo:
    https://github.com/tkmagesh/ibm-advgo-feb-2023

Software Requirements
    1. Go Tools (https://go.dev/dl)
    2. Visual Studio Code (https://code.visualstudio.com)
    3. Go Extenstion for VS Code (https://marketplace.visualstudio.com/items?itemName=golang.Go)

Prerequisites:
    Go language constructs
        variables, constants, data types, if else, switch case, for, functions, errors, panic & recovery, pointers
    Higher Order Functions
    Interfaces
    Structs, Methods & Composition
    Modules & Packages
    Concurrency


Recap:
    Higher Order Functions (Functions are first class citizens)
        1. Assign functions as values to variables
        2. Pass functions as arguments
        3. Return functions as return values

    Structs
        Are values


Concurrency
    Channel Behavior
        A RECEIVE operation is ALWAYS a blocking operation
        A SEND operation is blocked until a RECEIVE operation is initiated (conditions apply)

Context
    context.Background()

    Helpter
        context.WithCancel()
        context.WithValue()
        context.WithTimeout()
        context.WithDeadline()

GRPC
    Protocol Buffers
        Schema of the payload is shared in advance between the client and server
        ONLY data is exchanged
        Small and efficient payloads
        Binary serialization

    HTTP/2
        Communication Patterns
            - Request Response
            - Server Streaming 
            - Client Streaming
            - Bidirectional Streaming

    1. Contracts (Protocol Buffers)
        Service Contract
        Operation Contracts
        Message Contracts (data)
    2. Generate the Proxy & Stub
    3. Implement the service
    4. Host the service
    5. Client call the service using the proxy

    Tools Installation
        1. Protocol Buffers Compiler (protoc tool)
            Windows:
                Download the file, extract and keep in a folder (PATH) accessble through the command line
                https://github.com/protocolbuffers/protobuf/releases/download/v21.12/protoc-21.12-win64.zip
            Mac:
                brew install protobuf

            Verification:
                protoc --version

        2. Go plugins (installed in the GOPATH/bin folder)
            go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28
            go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2
    